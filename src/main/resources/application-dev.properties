spring.application.name=xf-wechat
#配置项，
server.port=8000
#这里主要配置模板引擎的数据
#thymeleaf配置
#模板的模式，支持如：HTML、XML、TEXT、JAVASCRIPT等
spring.thymeleaf.mode=HTML
#编码，可不用配置
spring.thymeleaf.encoding=UTF-8
#内容类别，可不用配置
spring.thymeleaf.servlet.content-type=text/html
#开发配置为false，避免修改模板还要重启服务器
spring.thymeleaf.cache=false
#配置模板路径，默认就是templates，可不用配置
spring.thymeleaf.prefix=classpath:/templates/
#数据大小限制
spring.servlet.multipart.maxFileSize=100MB
spring.servlet.multipart.maxRequestSize=100MB
#MongoDB配置
spring.data.mongodb.database=xf_wechat
spring.data.mongodb.host=47.101.38.62
spring.data.mongodb.username=xiaofeng
spring.data.mongodb.password=xiaofeng_mongodb!@#
spring.data.mongodb.port=27017
spring.data.mongodb.option.min-connection-per-host=5
spring.data.mongodb.option.max-connection-per-host=100
spring.data.mongodb.option.threads-allowed-to-block-for-connection-multiplier=5
spring.data.mongodb.option.server-selection-timeout=30000
spring.data.mongodb.option.max-wait-time=120000
spring.data.mongodb.option.max-connection-idle-time=0
spring.data.mongodb.option.max-connection-life-time=0
spring.data.mongodb.option.connect-timeout=10000
spring.data.mongodb.option.socket-timeout=0

spring.data.mongodb.option.socket-keep-alive=false
spring.data.mongodb.option.ssl-enabled=false
spring.data.mongodb.option.ssl-invalid-host-name-allowed=false
spring.data.mongodb.option.always-use-m-beans=false

spring.data.mongodb.option.heartbeat-socket-timeout=20000
spring.data.mongodb.option.heartbeat-connect-timeout=20000
spring.data.mongodb.option.min-heartbeat-frequency=500
spring.data.mongodb.option.heartbeat-frequency=10000
spring.data.mongodb.option.local-threshold=15
#rabbitmq配置
spring.rabbitmq.host=y-xiaofeng.top
spring.rabbitmq.port=5672
spring.rabbitmq.username=mq_root
spring.rabbitmq.password=mq_xiaofeng
#redis配置
spring.redis.database=0
spring.redis.host=47.101.38.62
spring.redis.port=6379
spring.redis.password=redis_xiaofeng
# 连接超时时间（毫秒）
spring.redis.timeout=10000
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.jedis.pool.max-active: 8
#spring.redis.jedis.pool.max-wait: -1
#spring.redis.jedis.pool.max-idle: 8
#spring.redis.jedis.pool.min-idle: 0
spring.redis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0

# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
# 不要设置过大，如果过大，启动项目会报错：打开文件数过多
server.undertow.io-threads: 4
# 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
# 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
server.undertow.worker-threads: 16
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
server.undertow.buffer-size: 1024
# 是否分配的直接内存(NIO直接分配的堆外内存)
server.undertow.direct-buffers: true
# 连接超时时间（毫秒）
#spring-session 使用
spring.session.store-type=redis
webSocket.netty.port=8950
file.upload.path=/usr/local/application/upload
#spring.mvc.static-path-pattern=/upload/**
spring.resources.static-locations=classpath:/static,classpath:/public,classpath:/resources,classpath:/META-INF/resource
#,file:/usr/local/application/upload
#暴露前端地址
project.pattern=http://y-xiaofeng.top:8000/
project.websocket.pattern=ws://y-xiaofeng.top:8900
#spring.boot.admin.client.url=http://127.0.0.1:9000
#management.endpoints.web.exposure.include=*
